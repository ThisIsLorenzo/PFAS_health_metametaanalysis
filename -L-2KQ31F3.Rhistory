I2           = pmin(100, pmax(0, (H2 - 1)/H2  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (H2_lb - 1)/H2_lb * 100)),
I2_ci_upper  = pmin(100, pmax(0, (H2_ub - 1)/H2_ub * 100))
)
overall_value_I2 <- data.frame(
H2        = exp(2 * mod_overall_H2$b[1]),
H2_lb     = exp(2 * mod_overall_H2$ci.lb),
H2_ub     = exp(2 * mod_overall_H2$ci.ub),
I2           = pmin(100, pmax(0, (H2 - 1)/H2  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (H2_lb - 1)/H2_lb * 100)),
I2_ci_upper  = pmin(100, pmax(0, (H2_ub - 1)/H2_ub * 100))
)
dat_H2$ma_e_id <- factor(dat_H2$ma_e_id)
dat_H2 <- dat_H2 %>%
mutate(
# 1) Compute H2 and its CIs
H2        = exp(2 * lnH),
H2_lb     = exp(2 * lnH_ci_lower),
H2_ub     = exp(2 * lnH_ci_upper),
# 2) Convert to I2 and truncate to [0,100]
I2           = pmin(100, pmax(0, (H2 - 1)/H2  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (H2_lb - 1)/H2_lb * 100)),
I2_ci_upper  = pmin(100, pmax(0, (H2_ub - 1)/H2_ub * 100))
)
overall_value_I2 <- data.frame(
H2        = exp(2 * mod_overall_H2$b[1]),
H2_lb     = exp(2 * mod_overall_H2$ci.lb),
H2_ub     = exp(2 * mod_overall_H2$ci.ub),
I2           = pmin(100, pmax(0, (overall_value_I2$H2 - 1)/overall_value_I2$H2  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (overall_value_I2$H2_lb - 1)/overall_value_I2$H2_lb * 100)),
I2_ci_upper  = pmin(100, pmax(0, (overall_value_I2$H2_ub - 1)/overall_value_I2$H2_ub * 100))
)
dat_H2$ma_e_id <- factor(dat_H2$ma_e_id)
dat_H2 <- dat_H2 %>%
mutate(
# 1) Compute H2 and its CIs
H2        = exp(2 * lnH),
H2_lb     = exp(2 * lnH_ci_lower),
H2_ub     = exp(2 * lnH_ci_upper),
# 2) Convert to I2 and truncate to [0,100]
I2           = pmin(100, pmax(0, (H2 - 1)/H2  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (H2_lb - 1)/H2_lb * 100)),
I2_ci_upper  = pmin(100, pmax(0, (H2_ub - 1)/H2_ub * 100))
)
overall_value_I2 <- data.frame(
I2           = pmin(100, pmax(0, (exp(2 * mod_overall_H2$b[1]) - 1)/exp(2 * mod_overall_H2$b[1])  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (exp(2 * mod_overall_H2$ci.lb) - 1)/exp(2 * mod_overall_H2$ci.lb) * 100)),
I2_ci_upper  = pmin(100, pmax(0, (exp(2 * mod_overall_H2$ci.ub) - 1)/exp(2 * mod_overall_H2$ci.ub) * 100))
)
fp_lnH <- ggplot(dat_H2, aes(x = I2, y = ma_e_id)) +
geom_point(shape = 18, size = 4) +  # Point estimates
geom_errorbarh(aes(xmin = lnH_ci_lower, xmax = lnH_ci_upper),
height = 0.2) +      # Confidence intervals
geom_vline(xintercept = 50,           # Line at null effect
linetype = "dashed",
color = "red") +
geom_point(data = overall_value_I2,
aes(x = I2, y = ma_e_id),
shape = 23, size = 4, fill = "red") +
geom_errorbarh(data = overall_value_I2,
aes(xmin = I2_ci_lower, xmax = I2_ci_upper, y = ma_e_id),
height = 0.3, size = 1) +
labs(x = "I2",
y = "Meta-analytic estimates",
title = "Forest Plot of Heterogeneity") +
theme_minimal() +
theme(panel.grid.major.y = element_blank()) + # Cleaner horizontal lines
scale_y_discrete(limits = rev(c(levels(dat_H2$ma_e_id), "Overall")))
plot_grid(fp_OR, fp_lnH,
labels = c('A','B'),
label_size = 14,
nrow = 1,
ncol = 2)
dat_H2$ma_e_id <- factor(dat_H2$ma_e_id)
dat_H2 <- dat_H2 %>%
mutate(
# 1) Compute H2 and its CIs
H2        = exp(2 * lnH),
H2_lb     = exp(2 * lnH_ci_lower),
H2_ub     = exp(2 * lnH_ci_upper),
# 2) Convert to I2 and truncate to [0,100]
I2           = pmin(100, pmax(0, (H2 - 1)/H2  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (H2_lb - 1)/H2_lb * 100)),
I2_ci_upper  = pmin(100, pmax(0, (H2_ub - 1)/H2_ub * 100))
)
overall_value_I2 <- data.frame(
I2           = pmin(100, pmax(0, (exp(2 * mod_overall_H2$b[1]) - 1)/exp(2 * mod_overall_H2$b[1])  * 100)),
ma_e_id = "Overall",
I2_ci_lower  = pmin(100, pmax(0, (exp(2 * mod_overall_H2$ci.lb) - 1)/exp(2 * mod_overall_H2$ci.lb) * 100)),
I2_ci_upper  = pmin(100, pmax(0, (exp(2 * mod_overall_H2$ci.ub) - 1)/exp(2 * mod_overall_H2$ci.ub) * 100))
)
fp_lnH <- ggplot(dat_H2, aes(x = I2, y = ma_e_id)) +
geom_point(shape = 18, size = 4) +  # Point estimates
geom_errorbarh(aes(xmin = lnH_ci_lower, xmax = lnH_ci_upper),
height = 0.2) +      # Confidence intervals
geom_vline(xintercept = 50,           # Line at null effect
linetype = "dashed",
color = "red") +
geom_point(data = overall_value_I2,
aes(x = I2, y = ma_e_id),
shape = 23, size = 4, fill = "red") +
geom_errorbarh(data = overall_value_I2,
aes(xmin = I2_ci_lower, xmax = I2_ci_upper, y = ma_e_id),
height = 0.3, size = 1) +
labs(x = "I2",
y = "Meta-analytic estimates",
title = "Forest Plot of Heterogeneity") +
theme_minimal() +
theme(panel.grid.major.y = element_blank()) + # Cleaner horizontal lines
scale_y_discrete(limits = rev(c(levels(dat_H2$ma_e_id), "Overall")))
plot_grid(fp_OR, fp_lnH,
labels = c('A','B'),
label_size = 14,
nrow = 1,
ncol = 2)
dat_H2$ma_e_id <- factor(dat_H2$ma_e_id)
dat_H2 <- dat_H2 %>%
mutate(
# 1) Compute H2 and its CIs
H2        = exp(2 * lnH),
H2_lb     = exp(2 * lnH_ci_lower),
H2_ub     = exp(2 * lnH_ci_upper),
# 2) Convert to I2 and truncate to [0,100]
I2           = pmin(100, pmax(0, (H2 - 1)/H2  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (H2_lb - 1)/H2_lb * 100)),
I2_ci_upper  = pmin(100, pmax(0, (H2_ub - 1)/H2_ub * 100))
)
overall_value_I2 <- data.frame(
I2           = pmin(100, pmax(0, (exp(2 * mod_overall_H2$b[1]) - 1)/exp(2 * mod_overall_H2$b[1])  * 100)),
ma_e_id = "Overall",
I2_ci_lower  = pmin(100, pmax(0, (exp(2 * mod_overall_H2$ci.lb) - 1)/exp(2 * mod_overall_H2$ci.lb) * 100)),
I2_ci_upper  = pmin(100, pmax(0, (exp(2 * mod_overall_H2$ci.ub) - 1)/exp(2 * mod_overall_H2$ci.ub) * 100))
)
fp_lnH <- ggplot(dat_H2, aes(x = I2, y = ma_e_id)) +
geom_point(shape = 18, size = 4) +  # Point estimates
geom_errorbarh(aes(xmin = I2_ci_lower, xmax = I2_ci_upper),
height = 0.2) +      # Confidence intervals
geom_vline(xintercept = 50,           # Line at null effect
linetype = "dashed",
color = "red") +
geom_point(data = overall_value_I2,
aes(x = I2, y = ma_e_id),
shape = 23, size = 4, fill = "red") +
geom_errorbarh(data = overall_value_I2,
aes(xmin = I2_ci_lower, xmax = I2_ci_upper, y = ma_e_id),
height = 0.3, size = 1) +
labs(x = "I2",
y = "Meta-analytic estimates",
title = "Forest Plot of Heterogeneity") +
theme_minimal() +
theme(panel.grid.major.y = element_blank()) + # Cleaner horizontal lines
scale_y_discrete(limits = rev(c(levels(dat_H2$ma_e_id), "Overall")))
plot_grid(fp_OR, fp_lnH,
labels = c('A','B'),
label_size = 14,
nrow = 1,
ncol = 2)
merged_overall_results <- bind_cols(overall_results, overall_results_H2)
#Extracting data from the model
overall_results_H2 <- tibble(
lnH = as.numeric(mod_overall_H2$b),
lnH_ci_lower = mod_overall_H2$ci.lb,
lnH_ci_upper = mod_overall_H2$ci.ub,
lnH_p_value = mod_overall_H2$pval
) %>%
mutate(
# 1) Compute H2 and its CIs
H2        = exp(2 * lnH),
H2_lb     = exp(2 * lnH_ci_lower),
H2_ub     = exp(2 * lnH_ci_upper),
# 2) Convert to I2 and truncate to [0,100]
I2           = pmin(100, pmax(0, (H2 - 1)/H2  * 100)),
I2_ci_lower  = pmin(100, pmax(0, (H2_lb - 1)/H2_lb * 100)),
I2_ci_upper  = pmin(100, pmax(0, (H2_ub - 1)/H2_ub * 100))
)
I2_text <- paste0("I² = ", round(overall_results_H2$I2, 1),
"% [", round(overall_results_H2$I2_ci_lower, 1),
"–", round(overall_results_H2$I2_ci_upper, 1), "%]")
I2_H2 <- orchaRd::i2_ml(mod_overall_H2)
overall_plot_H2 <- orchard_plot(
object = mod_overall_H2,
group = "ma_id",
xlab = "lnH",
transfm = "none",
trunk.size = 0.8,
branch.size = 2.5,
alpha = 1
) +
# Add faded red background for x < 0
# annotate("rect", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = 0.3466,
#          fill = "green", alpha = 0.08) +
# # Add faded green background for x > 0
# annotate("rect", xmin = -Inf, xmax = Inf, ymin = 0.3466, ymax = Inf,
#          fill = "red", alpha = 0.08) +
annotate(geom = "text",
x = 1.3,
y = 2,
label = paste0("italic(I)^2 ~ lnH == ", round(I2_H2[1],1)),
size = 4,
color ="black",
parse = TRUE) +
theme(
legend.position.inside = c(0.55, 0.05),  # x, y coordinates relative to the plot (0 = left/bottom, 1 = right/top)
legend.justification = c(0, 0),   # anchor the legend by its bottom-left corner
legend.background = element_rect(fill = alpha("green", 0.001), color = NA),
legend.key = element_rect(fill = "transparent")  # make individual legend keys blend in
)
print(overall_plot_H2)
merged_overall_results <- bind_cols(overall_results, overall_results_H2)
ggplot(merged_overall_results, aes(x = lnOR, y = I2)) +
# Horizontal error bars (for lnOR)
geom_errorbarh(aes(xmin = lnOR_ci_lower, xmax = lnOR_ci_upper), height = 2, alpha = 0.5) +
# Vertical error bars (for I2)
geom_errorbar(aes(ymin = I2_ci_lower, ymax = I2_ci_upper), width = 0.01, alpha = 0.5) +
# Point
geom_point(size = 5) +
# Reference lines
geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
geom_hline(yintercept = 50, linetype = "dashed", color = "grey40") +
# Axes
scale_x_continuous(limits = c(-0.1, 0.1), breaks = seq(-0.1, 0.1, by = 0.1)) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 25)) +
# Labels
labs(
x = "Effect size (logOR)",
y = "Heterogeneity (I\u00b2 %)"
) +
theme_minimal(base_size = 13)
ggplot(merged_overall_results, aes(x = lnOR, y = I2)) +
# Horizontal error bars (for lnOR)
geom_errorbarh(aes(xmin = lnOR_ci_lower, xmax = lnOR_ci_upper), height = 2, alpha = 0.5) +
# Vertical error bars (for I2)
geom_errorbar(aes(ymin = I2_ci_lower, ymax = I2_ci_upper), width = 0.01, alpha = 0.5) +
# Point
geom_point(size = 5) +
# Reference lines
geom_vline(xintercept = 0, linetype = "dashed", color = "grey40") +
geom_hline(yintercept = 50, linetype = "dashed", color = "grey40") +
# Axes
scale_x_continuous(limits = c(-0.1, 0.1), breaks = seq(-0.1, 0.1, by = 0.1)) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 25)) +
# Labels
labs(
x = "Effect size (logOR)",
y = "Heterogeneity (I\u00b2 %)"
) +
theme_minimal(base_size = 13)
include
overall_results
# Prepare merged dataset for plotting (merge OR and I2 data by ma_e_id)
galaxy_data <- dat_quant %>%
mutate(
OR = exp(logOR),
OR_ci_lower = exp(l_ci_logOR),
OR_ci_upper = exp(u_ci_logOR)
) %>%
left_join(
dat_H2 %>% select(ma_e_id, I2, I2_ci_lower, I2_ci_upper),
by = "ma_e_id"
)
# Prepare overall result
overall_point <- data.frame(
OR = overall_value_logOR$OR,
OR_ci_lower = overall_value_logOR$OR_ci_lower,
OR_ci_upper = overall_value_logOR$OR_ci_upper,
I2 = overall_value_I2$I2,
I2_ci_lower = overall_value_I2$I2_ci_lower,
I2_ci_upper = overall_value_I2$I2_ci_upper,
ma_e_id = "Overall"
)
# Plot
ggplot(galaxy_data, aes(x = OR, y = I2)) +
# Horizontal error bars for OR
geom_errorbarh(aes(xmin = OR_ci_lower, xmax = OR_ci_upper), height = 2, alpha = 0.5) +
# Vertical error bars for I2
geom_errorbar(aes(ymin = I2_ci_lower, ymax = I2_ci_upper), width = 0.01, alpha = 0.5) +
# Points for each study
geom_point(size = 5, shape = 21, fill = "skyblue") +
# Overall point (diamond shape)
geom_point(
data = overall_point,
aes(x = OR, y = I2),
shape = 23,  # Diamond
size = 6,
fill = "red"
) +
geom_errorbarh(
data = overall_point,
aes(xmin = OR_ci_lower, xmax = OR_ci_upper),
height = 2, size = 1
) +
geom_errorbar(
data = overall_point,
aes(ymin = I2_ci_lower, ymax = I2_ci_upper),
width = 0.01, size = 1
) +
# Reference lines
geom_vline(xintercept = 1, linetype = "dashed", color = "grey40") +
geom_hline(yintercept = 50, linetype = "dashed", color = "grey40") +
# Axes
scale_x_continuous(limits = c(0.9, 1.1), breaks = seq(0.9, 1.1, by = 0.05)) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 25)) +
# Labels
labs(
x = "Effect size (OR)",
y = "Heterogeneity (I\u00b2 %)",
title = "Galaxy Plot: OR vs I²"
) +
theme_minimal(base_size = 13)
# Prepare merged dataset for plotting (merge OR and I2 data by ma_e_id)
galaxy_data <- dat_quant %>%
mutate(
OR = exp(logOR),
OR_ci_lower = exp(l_ci_logOR),
OR_ci_upper = exp(u_ci_logOR)
) %>%
left_join(
dat_H2 %>% select(ma_e_id, I2, I2_ci_lower, I2_ci_upper),
by = "ma_e_id"
)
# Prepare overall result
overall_point <- data.frame(
OR = overall_value_logOR$OR,
OR_ci_lower = overall_value_logOR$OR_ci_lower,
OR_ci_upper = overall_value_logOR$OR_ci_upper,
I2 = overall_value_I2$I2,
I2_ci_lower = overall_value_I2$I2_ci_lower,
I2_ci_upper = overall_value_I2$I2_ci_upper,
ma_e_id = "Overall"
)
# Plot
ggplot(galaxy_data, aes(x = OR, y = I2)) +
# Individual points (no error bars)
geom_point(size = 5, shape = 21, fill = "skyblue") +
# Overall point (diamond)
geom_point(
data = overall_point,
aes(x = OR, y = I2),
shape = 23,  # Diamond shape
size = 6,
fill = "red"
) +
# Overall horizontal error bar (for OR)
geom_errorbarh(
data = overall_point,
aes(xmin = OR_ci_lower, xmax = OR_ci_upper),
height = 2, size = 1
) +
# Overall vertical error bar (for I2)
geom_errorbar(
data = overall_point,
aes(ymin = I2_ci_lower, ymax = I2_ci_upper),
width = 0.01, size = 1
) +
# Reference lines
geom_vline(xintercept = 1, linetype = "dashed", color = "grey40") +
geom_hline(yintercept = 50, linetype = "dashed", color = "grey40") +
# Axes
scale_x_continuous(limits = c(0.9, 1.1), breaks = seq(0.9, 1.1, by = 0.05)) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 25)) +
# Labels
labs(
x = "Effect size (OR)",
y = "Heterogeneity (I\u00b2 %)",
title = "Galaxy Plot: OR vs I²"
) +
theme_minimal(base_size = 13)
# Plot
ggplot(galaxy_data, aes(x = OR, y = I2)) +
# Individual points (no error bars)
geom_point(size = 5, shape = 21, fill = "skyblue") +
# Overall point (diamond)
geom_point(
data = overall_point,
aes(x = OR, y = I2),
shape = 23,  # Diamond shape
size = 6,
fill = "red"
) +
# Overall horizontal error bar (for OR)
geom_errorbarh(
data = overall_point,
aes(xmin = OR_ci_lower, xmax = OR_ci_upper),
height = 2, size = 1
) +
# Overall vertical error bar (for I2)
geom_errorbar(
data = overall_point,
aes(ymin = I2_ci_lower, ymax = I2_ci_upper),
width = 0.01, size = 1
) +
# Reference lines
geom_vline(xintercept = 1, linetype = "dashed", color = "grey40") +
geom_hline(yintercept = 50, linetype = "dashed", color = "grey40") +
# Axes
scale_x_continuous(limits = c(0.9, 1.1), breaks = seq(0.9, 1.1, by = 0.05)) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 25)) +
# Labels
labs(
x = "Effect size (OR)",
y = "Heterogeneity (I\u00b2 %)",
title = "Overall Result"
) +
theme_minimal(base_size = 13)
# Combine data (galaxy_data) and overall point
galaxy_data <- dat_quant %>%
mutate(
OR = exp(logOR),
OR_ci_lower = exp(l_ci_logOR),
OR_ci_upper = exp(u_ci_logOR)
) %>%
left_join(
dat_H2 %>% select(ma_e_id, I2, I2_ci_lower, I2_ci_upper),
by = "ma_e_id"
)
# Create overall result point (diamond with error bars)
overall_point <- data.frame(
OR = overall_value_logOR$OR,
OR_ci_lower = overall_value_logOR$OR_ci_lower,
OR_ci_upper = overall_value_logOR$OR_ci_upper,
I2 = overall_value_I2$I2,
I2_ci_lower = overall_value_I2$I2_ci_lower,
I2_ci_upper = overall_value_I2$I2_ci_upper,
ma_e_id = "Overall"
)
# Plot
ggplot(galaxy_data, aes(x = OR, y = I2)) +
# Individual points
geom_point(size = 5, shape = 21, fill = "skyblue", color = "black", alpha = 0.9) +
# Overall diamond point
geom_point(
data = overall_point,
aes(x = OR, y = I2),
shape = 23, size = 6, fill = "red", color = "black"
) +
# Overall error bars
geom_errorbarh(
data = overall_point,
aes(xmin = OR_ci_lower, xmax = OR_ci_upper),
height = 2, size = 1, alpha = 0.7
) +
geom_errorbar(
data = overall_point,
aes(ymin = I2_ci_lower, ymax = I2_ci_upper),
width = 0.01, size = 1, alpha = 0.7
) +
# Reference lines
geom_vline(xintercept = 1, linetype = "dashed", color = "grey40") +
geom_hline(yintercept = 50, linetype = "dashed", color = "grey40") +
# Axes
scale_x_continuous(limits = c(0.9, 1.1), breaks = seq(0.9, 1.1, by = 0.05)) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 25)) +
# Labels
labs(
x = "Effect size (OR)",
y = "Heterogeneity (I\u00b2 %)"
) +
theme_minimal(base_size = 13) +
theme(
panel.grid.major.y = element_blank()  # cleaner horizontal lines like your original
)
# Plot
ggplot(galaxy_data, aes(x = OR, y = I2)) +
# Individual points
geom_point(size = 5, shape = 21, fill = "skyblue", color = "black", alpha = 0.9) +
# Overall diamond point
geom_point(
data = overall_point,
aes(x = OR, y = I2),
shape = 23, size = 6, fill = "red", color = "black"
) +
# Overall error bars
geom_errorbarh(
data = overall_point,
aes(xmin = OR_ci_lower, xmax = OR_ci_upper),
height = 2, size = 1, alpha = 0.7
) +
geom_errorbar(
data = overall_point,
aes(ymin = I2_ci_lower, ymax = I2_ci_upper),
width = 0.01, size = 1, alpha = 0.7
) +
# Reference lines
geom_vline(xintercept = 1, linetype = "dashed", color = "grey40") +
geom_hline(yintercept = 50, linetype = "dashed", color = "grey40") +
# Axes
scale_x_continuous(limits = c(0.9, 1.1), breaks = seq(0.9, 1.1, by = 0.05)) +
scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, by = 25)) +
# Labels
labs(
x = "Effect size (OR)",
y = "Heterogeneity (I\u00b2 %)"
) +
theme_minimal(base_size = 13) +
theme(
panel.grid.major.y = element_blank()  # cleaner horizontal lines like your original
)
library(ggplot2)
library(ggrepel)
# Create plotting dataset
galaxy_data <- dat_quant %>%
mutate(
OR = exp(logOR),
OR_ci_lower = exp(l_ci_logOR),
OR_ci_upper = exp(u_ci_logOR),
sig = pval < 0.05  # Logical for coloring
) %>%
left_join(
dat_H2 %>% select(ma_e_id, I2, I2_ci_lower, I2_ci_upper),
by = "ma_e_id"
)
overall_plot_logOR
